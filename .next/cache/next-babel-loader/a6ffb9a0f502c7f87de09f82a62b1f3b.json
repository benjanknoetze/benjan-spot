{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/Chuckie/Documents/GitHub/benjan-spot/components/Contact/ContactForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n//Contact page form\nimport { Button } from 'react-bootstrap';\nimport { FormspreeProvider } from '@formspree/react';\n/* export default class MyForm extends React.Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t  this.submitForm = this.submitForm.bind(this);\r\n\t  this.state = {\r\n\t\tstatus: \"\"\r\n\t  };\r\n\t}\r\n  \r\n\trender() {\r\n\t  const { status } = this.state;\r\n\t  return (\r\n\t\t<FormspreeProvider project=\"{contact}\">\r\n\t\t<h5 className=\"Heading pl-3 mt-3\">Get in touch</h5>\r\n\t\t<form \r\n\t\t  className=\"p-3\"\r\n\t\t  onSubmit={this.submitForm}\r\n\t\t  action=\"https://formspree.io/f/xrgoqvaq\"\r\n          method=\"POST\"\r\n\t\t>\r\n\t\t  <label className=\"formLabel\">Email:</label>\r\n\t\t  <br></br>\r\n\t\t  <input className=\"formInput\" type=\"email\" name=\"email\" /> <br></br>\r\n\t\t  <label className=\"formLabel mt-2\">Message:</label> <br></br>\r\n\t\t  <input className=\"formInput pb-5\" type=\"text\" name=\"message\" /> <br></br>\r\n\t\t  {status === \"SUCCESS\" ? <p>Thanks!</p> : <Button className=\"submitButton mt-3\">Submit</Button>}\r\n\t\t  {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\r\n\t\t</form>\r\n\t\t<style global jsx>{`\r\n\t\t\t.Heading {\r\n\t\t\t\tcolor: #0d0411;\r\n\t\t\t\tfont-family: Allerta, sans-serif;\r\n\t\t\t\tfont-weight: 800;\r\n\t\t\t}\r\n\t\t\t.contactText {\r\n\t\t\t\tcolor: #0d0411;\r\n\t\t\t\tfont-family: Bitter, serif;\r\n\t\t\t}\r\n\t\t\t.formLabel {\r\n\t\t\t\tfont-family: Bitter, serif;\r\n\t\t\t}\r\n\t\t\t.formInput {\r\n\t\t\t\tbackground-color: #cdc9de;\r\n\t\t\t\twidth: 75%;\r\n\t\t\t\tborder: none;\r\n\t\t\t\tborder-radius: 4px;\r\n\t\t\t}\r\n\t\t\t.submitButton {\r\n\t\t\t\twidth: 110px;\r\n\t\t\t}\r\n\t\t\t`}</style>\r\n\t\t</FormspreeProvider>\r\n\t  );\r\n\t}\r\n  \r\n\tsubmitForm(ev) {\r\n\t  ev.preventDefault();\r\n\t  const form = ev.target;\r\n\t  const data = new FormData(form);\r\n\t  const xhr = new XMLHttpRequest();\r\n\t  xhr.open(form.method, form.action);\r\n\t  xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n\t  xhr.onreadystatechange = () => {\r\n\t\tif (xhr.readyState !== XMLHttpRequest.DONE) return;\r\n\t\tif (xhr.status === 200) {\r\n\t\t  form.reset();\r\n\t\t  this.setState({ status: \"SUCCESS\" });\r\n\t\t} else {\r\n\t\t  this.setState({ status: \"ERROR\" });\r\n\t\t}\r\n\t  };\r\n\t  xhr.send(data);\r\n\t}\r\n  } */\n\nvar MyForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(MyForm, _React$Component);\n\n  var _super = _createSuper(MyForm);\n\n  function MyForm(props) {\n    var _this;\n\n    _classCallCheck(this, MyForm);\n\n    _this = _super.call(this, props);\n    _this.submitForm = _this.submitForm.bind(_assertThisInitialized(_this));\n    _this.state = {\n      status: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(MyForm, [{\n    key: \"render\",\n    value: function render() {\n      var status = this.state.status;\n      return __jsx(\"form\", {\n        onSubmit: this.submitForm,\n        action: \"https://formspree.io/f/xrgoqvaq\",\n        method: \"POST\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 3\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 5\n        }\n      }, \"Email:\"), __jsx(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 5\n        }\n      }), __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 5\n        }\n      }, \"Message:\"), __jsx(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 5\n        }\n      }), status === \"SUCCESS\" ? __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }\n      }, \"Thanks!\") : __jsx(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 46\n        }\n      }, \"Submit\"), status === \"ERROR\" && __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 28\n        }\n      }, \"Ooops! There was an error.\"));\n    }\n  }, {\n    key: \"submitForm\",\n    value: function submitForm(ev) {\n      var _this2 = this;\n\n      ev.preventDefault();\n      var form = ev.target;\n      var data = new FormData(form);\n      var xhr = new XMLHttpRequest();\n      xhr.open(form.method, form.action);\n      xhr.setRequestHeader(\"Accept\", \"application/json\");\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState !== XMLHttpRequest.DONE) return;\n\n        if (xhr.status === 200) {\n          form.reset();\n\n          _this2.setState({\n            status: \"SUCCESS\"\n          });\n        } else {\n          _this2.setState({\n            status: \"ERROR\"\n          });\n        }\n      };\n\n      xhr.send(data);\n    }\n  }]);\n\n  return MyForm;\n}(React.Component);\n\nexport { MyForm as default };","map":{"version":3,"sources":["/Users/Chuckie/Documents/GitHub/benjan-spot/components/Contact/ContactForm.js"],"names":["Button","FormspreeProvider","MyForm","props","submitForm","bind","state","status","ev","preventDefault","form","target","data","FormData","xhr","XMLHttpRequest","open","method","action","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","React","Component"],"mappings":";;;;;;;;;;;;;;AAAA;AAEA,SAASA,MAAT,QAAuB,iBAAvB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4EuBC,M;;;;;AACtB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB;AACA,UAAKC,KAAL,GAAa;AACdC,MAAAA,MAAM,EAAE;AADM,KAAb;AAHiB;AAMlB;;;;6BAEQ;AAAA,UACCA,MADD,GACY,KAAKD,KADjB,CACCC,MADD;AAEP,aACD;AACE,QAAA,QAAQ,EAAE,KAAKH,UADjB;AAEE,QAAA,MAAM,EAAC,iCAFT;AAGE,QAAA,MAAM,EAAC,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAME;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,EAQE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EASGG,MAAM,KAAK,SAAX,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAvB,GAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAT3C,EAUGA,MAAM,KAAK,OAAX,IAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAVzB,CADC;AAcD;;;+BAEUC,E,EAAI;AAAA;;AACbA,MAAAA,EAAE,CAACC,cAAH;AACA,UAAMC,IAAI,GAAGF,EAAE,CAACG,MAAhB;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAaH,IAAb,CAAb;AACA,UAAMI,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACAD,MAAAA,GAAG,CAACE,IAAJ,CAASN,IAAI,CAACO,MAAd,EAAsBP,IAAI,CAACQ,MAA3B;AACAJ,MAAAA,GAAG,CAACK,gBAAJ,CAAqB,QAArB,EAA+B,kBAA/B;;AACAL,MAAAA,GAAG,CAACM,kBAAJ,GAAyB,YAAM;AAChC,YAAIN,GAAG,CAACO,UAAJ,KAAmBN,cAAc,CAACO,IAAtC,EAA4C;;AAC5C,YAAIR,GAAG,CAACP,MAAJ,KAAe,GAAnB,EAAwB;AACtBG,UAAAA,IAAI,CAACa,KAAL;;AACA,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEjB,YAAAA,MAAM,EAAE;AAAV,WAAd;AACD,SAHD,MAGO;AACL,UAAA,MAAI,CAACiB,QAAL,CAAc;AAAEjB,YAAAA,MAAM,EAAE;AAAV,WAAd;AACD;AACC,OARD;;AASAO,MAAAA,GAAG,CAACW,IAAJ,CAASb,IAAT;AACD;;;;EA5CoCc,KAAK,CAACC,S;;SAArBzB,M","sourcesContent":["//Contact page form\r\n\r\nimport { Button } from 'react-bootstrap'\r\nimport { FormspreeProvider } from '@formspree/react';\r\n\r\n/* export default class MyForm extends React.Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t  this.submitForm = this.submitForm.bind(this);\r\n\t  this.state = {\r\n\t\tstatus: \"\"\r\n\t  };\r\n\t}\r\n  \r\n\trender() {\r\n\t  const { status } = this.state;\r\n\t  return (\r\n\t\t<FormspreeProvider project=\"{contact}\">\r\n\t\t<h5 className=\"Heading pl-3 mt-3\">Get in touch</h5>\r\n\t\t<form \r\n\t\t  className=\"p-3\"\r\n\t\t  onSubmit={this.submitForm}\r\n\t\t  action=\"https://formspree.io/f/xrgoqvaq\"\r\n          method=\"POST\"\r\n\t\t>\r\n\t\t  <label className=\"formLabel\">Email:</label>\r\n\t\t  <br></br>\r\n\t\t  <input className=\"formInput\" type=\"email\" name=\"email\" /> <br></br>\r\n\t\t  <label className=\"formLabel mt-2\">Message:</label> <br></br>\r\n\t\t  <input className=\"formInput pb-5\" type=\"text\" name=\"message\" /> <br></br>\r\n\t\t  {status === \"SUCCESS\" ? <p>Thanks!</p> : <Button className=\"submitButton mt-3\">Submit</Button>}\r\n\t\t  {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\r\n\t\t</form>\r\n\t\t<style global jsx>{`\r\n\t\t\t.Heading {\r\n\t\t\t\tcolor: #0d0411;\r\n\t\t\t\tfont-family: Allerta, sans-serif;\r\n\t\t\t\tfont-weight: 800;\r\n\t\t\t}\r\n\t\t\t.contactText {\r\n\t\t\t\tcolor: #0d0411;\r\n\t\t\t\tfont-family: Bitter, serif;\r\n\t\t\t}\r\n\t\t\t.formLabel {\r\n\t\t\t\tfont-family: Bitter, serif;\r\n\t\t\t}\r\n\t\t\t.formInput {\r\n\t\t\t\tbackground-color: #cdc9de;\r\n\t\t\t\twidth: 75%;\r\n\t\t\t\tborder: none;\r\n\t\t\t\tborder-radius: 4px;\r\n\t\t\t}\r\n\t\t\t.submitButton {\r\n\t\t\t\twidth: 110px;\r\n\t\t\t}\r\n\t\t\t`}</style>\r\n\t\t</FormspreeProvider>\r\n\t  );\r\n\t}\r\n  \r\n\tsubmitForm(ev) {\r\n\t  ev.preventDefault();\r\n\t  const form = ev.target;\r\n\t  const data = new FormData(form);\r\n\t  const xhr = new XMLHttpRequest();\r\n\t  xhr.open(form.method, form.action);\r\n\t  xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n\t  xhr.onreadystatechange = () => {\r\n\t\tif (xhr.readyState !== XMLHttpRequest.DONE) return;\r\n\t\tif (xhr.status === 200) {\r\n\t\t  form.reset();\r\n\t\t  this.setState({ status: \"SUCCESS\" });\r\n\t\t} else {\r\n\t\t  this.setState({ status: \"ERROR\" });\r\n\t\t}\r\n\t  };\r\n\t  xhr.send(data);\r\n\t}\r\n  } */\r\n\r\n\r\n  export default class MyForm extends React.Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t  this.submitForm = this.submitForm.bind(this);\r\n\t  this.state = {\r\n\t\tstatus: \"\"\r\n\t  };\r\n\t}\r\n  \r\n\trender() {\r\n\t  const { status } = this.state;\r\n\t  return (\r\n\t\t<form\r\n\t\t  onSubmit={this.submitForm}\r\n\t\t  action=\"https://formspree.io/f/xrgoqvaq\"\r\n\t\t  method=\"POST\"\r\n\t\t>\r\n\t\t  <label>Email:</label>\r\n\t\t  <input type=\"email\" name=\"email\" />\r\n\t\t  <label>Message:</label>\r\n\t\t  <input type=\"text\" name=\"message\" />\r\n\t\t  {status === \"SUCCESS\" ? <p>Thanks!</p> : <button>Submit</button>}\r\n\t\t  {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\r\n\t\t</form>\r\n\t  );\r\n\t}\r\n  \r\n\tsubmitForm(ev) {\r\n\t  ev.preventDefault();\r\n\t  const form = ev.target;\r\n\t  const data = new FormData(form);\r\n\t  const xhr = new XMLHttpRequest();\r\n\t  xhr.open(form.method, form.action);\r\n\t  xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n\t  xhr.onreadystatechange = () => {\r\n\t\tif (xhr.readyState !== XMLHttpRequest.DONE) return;\r\n\t\tif (xhr.status === 200) {\r\n\t\t  form.reset();\r\n\t\t  this.setState({ status: \"SUCCESS\" });\r\n\t\t} else {\r\n\t\t  this.setState({ status: \"ERROR\" });\r\n\t\t}\r\n\t  };\r\n\t  xhr.send(data);\r\n\t}\r\n  }"]},"metadata":{},"sourceType":"module"}